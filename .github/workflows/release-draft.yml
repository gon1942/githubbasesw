name: Create Release

on:
  push:
    branches:
      - main  # 릴리즈를 생성할 브랜치

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Run jest
      run: npm run jest  # 테스트 명령어는 프로젝트에 따라 다를 수 있습니다.
      
    - name: List files in root
      run: ls -al

  release:
    needs: build  # 빌드 작업이 성공해야 실행됩니다.
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
      id-token: write 
    steps:
    
    - name: List files in root(release)
      run: ls -al
    # 버전을 증가시키고 새 태그를 생성합니다.
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    # 브랜치나 태그 이름을 추출합니다.
    - name: Extract branch or tag name
      id: extract_ref
      run: echo "##[set-output name=ref;]$(echo ${GITHUB_REF#refs/*/})"

    # GitHub 릴리즈를 생성합니다.
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        draft: false
        prerelease: false
        release_name: Release ${{ steps.tag_version.outputs.new_tag }}  # 새로운 태그 이름을 사용합니다.
        tag_name: ${{ steps.tag_version.outputs.new_tag }}  # 새로운 태그 이름을 사용합니다.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # CHANGELOG.md 파일을 업데이트합니다.
    - name: Update Changelog
      uses: stefanzweifel/changelog-updater-action@v1
      with:
        latest-version: ${{ steps.tag_version.outputs.new_tag }}
        release-notes: "Your release notes here"  # 릴리즈 노트 내용을 입력하세요.
    
